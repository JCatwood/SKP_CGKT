src = $(wildcard *.cpp)
obj = $(src:.cpp=.o)
dep = $(obj:.o=.d)
CXX = g++
MKLROOT = /opt/intel/compilers_and_libraries_2019.4.243/linux/mkl
EIGEN = ./eigen/Eigen
MORTON = ./libmorton
HLIBPROROOT = /home/caoj/Downloads/hlibpro-2.7.2
OMPFLAG = -fopenmp
LDOMP = -lgomp
LDHLIBPRO = -L$(HLIBPROROOT)/lib -Wl,-rpath,$(HLIBPROROOT)/lib -lhpro -llapack -lblas -L$(HLIBPROROOT)/aux/lib -Wl,-rpath,$(HLIBPROROOT)/aux/lib -lboost_filesystem -lboost_system -lboost_program_options -lboost_iostreams -ltbb -lz -lmetis -lfftw3 -lgsl -lgslcblas -lm
LDMKL = -Wl,--start-group ${MKLROOT}/lib/intel64/libmkl_intel_lp64.a ${MKLROOT}/lib/intel64/libmkl_gnu_thread.a ${MKLROOT}/lib/intel64/libmkl_core.a -Wl,--end-group -lgomp -lpthread -lm -ldl


DEBUG ?= F
ifeq ($(DEBUG) , F)
	CXXFLAGS = -I$(EIGEN) -I$(MKLROOT)/include -I$(MORTON)/include -I$(HLIBPROROOT)/include $(OMPFLAG) -O3 -m64 -std=c++17 -Wall
	LDFLAGS = $(LDHLIBPRO) $(LDMKL) $(LDOMP)
else
	CXXFLAGS = -I$(EIGEN) -I$(MKLROOT)/include -I$(MORTON)/include -I$(HLIBPROROOT)/include -O0 -m64 -std=c++17 -Wall
	LDFLAGS = $(LDHLIBPRO) $(LDMKL) 
endif

main: $(obj)
	$(CXX) -o $@ $^ $(LDFLAGS)

%.o: %.cpp
	@$(CXX) $(CXXFLAGS) $< -MM -MT $@ > $*.d
	$(CXX) $(CXXFLAGS) $(OPT) -c $< -o $@ 

include $(wildcard $(dep))

.PHONY: clean
clean:
	rm -f $(wildcard $(obj) main) 

.PHONY: cleandep
cleandep:
	rm -f $(wildcard $(dep))

